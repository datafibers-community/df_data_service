@import '../libs/vars';
@import '../libs/functions';
@import '../libs/mixins';

///
/// Eventually by HTML5 UP
/// html5up.net | @ajlkn
/// Free for personal and commercial use under the CCA 3.0 license (html5up.net/license)
///

/* Form */

	form {
		margin: 0 0 _size(element-margin) 0;

		.message {
			@include icon;
			@include vendor('transition', (
				'opacity #{_duration(transition)} ease-in-out',
				'transform #{_duration(transition)} ease-in-out'
			));
			@include vendor('transform', 'scale(1.05)');
			height: _size(element-height);
			line-height: _size(element-height);
			opacity: 0;

			&:before {
				margin-right: 0.5em;
			}

			&.visible {
				@include vendor('transform', 'scale(1)');
				opacity: 1;
			}

			&.success {
				color: _palette(positive, bg);

				&:before {
					content: '\f00c';
				}
			}

			&.failure {
				color: _palette(negative, bg);

				&:before {
					content: '\f119';
				}
			}
		}
	}

	label {
		color: _palette(fg-bold);
		display: block;
		font-size: 0.9em;
		font-weight: _font(weight-bold);
		margin: 0 0 (_size(element-margin) * 0.5) 0;
	}

	@include keyframes(focus) {
		0% { @include vendor('transform', 'scale(1)'); }
		50% { @include vendor('transform', 'scale(1.025)'); }
		100% { @include vendor('transform', 'scale(1)'); }
	}

	input[type="text"],
	input[type="password"],
	input[type="email"],
	select,
	textarea {
		@include vendor('appearance', 'none');
		@include vendor('transform', 'scale(1)');
		@include vendor('transition', (
			'border-color #{_duration(transition)} ease',
			'background-color #{_duration(transition)} ease'
		));
		background-color: transparent;
		border-radius: _size(border-radius);
		border: none;
		border: solid _size(border-width) _palette(border);
		color: inherit;
		display: block;
		outline: 0;
		padding: 0 1em;
		text-decoration: none;
		width: 100%;

		&:invalid {
			box-shadow: none;
		}

		&:focus {
			@include vendor('animation', 'focus 0.1s');
			background-color: _palette(border-bg);
			border-color: _palette(accent, bg);
		}
	}

	.select-wrapper {
		@include icon;
		display: block;
		position: relative;

		&:before {
			color: _palette(border);
			content: '\f078';
			display: block;
			height: _size(element-height);
			line-height: _size(element-height);
			pointer-events: none;
			position: absolute;
			right: 0;
			text-align: center;
			top: 0;
			width: _size(element-height);
		}

		select::-ms-expand {
			display: none;
		}
	}

	input[type="text"],
	input[type="password"],
	input[type="email"],
	select {
		height: _size(element-height);
	}

	textarea {
		padding: 0.75em 1em;
	}

	input[type="checkbox"],
	input[type="radio"], {
		@include vendor('appearance', 'none');
		display: block;
		float: left;
		margin-right: -2em;
		opacity: 0;
		width: 1em;
		z-index: -1;

		& + label {
			@include icon;
			color: _palette(fg);
			cursor: pointer;
			display: inline-block;
			font-size: 1em;
			font-weight: _font(weight);
			padding-left: (_size(element-height) * 0.6) + 0.75em;
			padding-right: 0.75em;
			position: relative;

			&:before {
				background: _palette(border-bg);
				border-radius: _size(border-radius);
				border: solid _size(border-width) _palette(border);
				content: '';
				display: inline-block;
				height: (_size(element-height) * 0.6);
				left: 0;
				line-height: (_size(element-height) * 0.575);
				position: absolute;
				text-align: center;
				top: 0;
				width: (_size(element-height) * 0.6);
			}
		}

		&:checked + label {
			&:before {
				background: _palette(accent, bg);
				border-color: _palette(accent, bg);
				color: _palette(accent, fg-bold);
				content: '\f00c';
			}
		}

		&:focus + label {
			&:before {
				border-color: _palette(accent, bg);
				box-shadow: 0 0 0 _size(border-width) _palette(accent, bg);
			}
		}
	}

	input[type="checkbox"] {
		& + label {
			&:before {
				border-radius: _size(border-radius);
			}
		}
	}

	input[type="radio"] {
		& + label {
			&:before {
				border-radius: 100%;
			}
		}
	}

	::-webkit-input-placeholder {
		color: _palette(fg-light) !important;
		opacity: 1.0;
	}

	:-moz-placeholder {
		color: _palette(fg-light) !important;
		opacity: 1.0;
	}

	::-moz-placeholder {
		color: _palette(fg-light) !important;
		opacity: 1.0;
	}

	:-ms-input-placeholder {
		color: _palette(fg-light) !important;
		opacity: 1.0;
	}

	.formerize-placeholder {
		color: _palette(fg-light) !important;
		opacity: 1.0;
	}